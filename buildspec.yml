version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.12
    commands:
      - echo "Installing dependencies..."
      - pip install --upgrade pip
      - pip install boto3==1.34.42
      - echo "Installing SonarQube scanner..."
      - curl -sL https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip -o sonar-scanner.zip
      - unzip sonar-scanner.zip -d $HOME
      - export PATH=$HOME/sonar-scanner-4.8.0.2856-linux/bin:$PATH

  pre_build:
    commands:
      - echo "Running pre-build actions..."
      # Add any pre-build actions here, such as running tests or other checks

  build:
    commands:
      - ls -l
      - cp buildspec-deploy.yml /tmp/buildspec-deploy.yml
      - zip -r buildspec-deploy.zip /tmp/buildspec-deploy.yml
      - cp test_crud_orders_lambda_read.py /tmp/test_crud_orders_lambda_read.py
      - cp test_crud_orders_lambda_update.py /tmp/test_crud_orders_lambda_update.py
      - cp test_crud_wallet_lambda_add_funds.py /tmp/test_crud_wallet_lambda_add_funds.py
      - cp test_crud_wallet_lambda_get_wallet.py /tmp/test_crud_wallet_lambda_get_wallet.py
      - cp test_crud_wallet_lambda_deduct_funds.py /tmp/test_crud_wallet_lambda_deduct_funds.py
      - echo "Packaging CRUDOrders Lambda function..."
      - cd Functions/CRUDOrders
      - ls -l
      - mkdir -p package
      - cp lambda_function.py package/
      - if [ -f requirements.txt ]; then pip install -r requirements.txt -t package/; fi
      - cd package
      - ls -l
      - zip -r ../../CRUDOrders.zip .
      - cd ../..

      - ls -l
      - echo "Packaging CRUDWallet Lambda function..."
      - cd CRUDWallet
      - ls -l
      - mkdir -p package
      - cp lambda_function.py package/
      - if [ -f requirements.txt ]; then pip install -r requirements.txt -t package/; fi
      - cd package
      - ls -l
      - zip -r ../../CRUDWallet.zip .
      - ls -l
      - cd ..
      - ls -l
      - cd ..

      - ls -l
      - echo "Packaging CallBackLambda function..."
      - cd CallBackLambda
      - ls -l
      - mkdir -p package
      - cp lambda_function.py package/
      - if [ -f requirements.txt ]; then pip install -r requirements.txt -t package/; fi
      - cd package
      - ls -l
      - zip -r ../../CallBackLambda.zip .
      - ls -l
      - cd ..
      - ls -l
      - cd ..
      - cd ..

      - ls -l
      - echo "Packaging CloudFormation stack template..."
      - cd CloudFormatTemplates
      - ls -l
      - zip -r ../stack.zip stack.yml
      - cd ..

      - echo "Running SonarQube analysis..."
      - sonar-scanner -Dsonar.projectKey=Ghaith-oss_AWSAdSystem -Dsonar.organization=ghaith-oss -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=acb8d30d15e4c699ab9256399dad2000b9852dbb

  post_build:
    commands:
      - echo "Uploading packaged functions and stack template to S3..."
      - aws s3 cp buildspec-deploy.yml s3://deployment-ad-system/AdSystemPipeLine/BuildArtif/
      - aws s3 cp test_crud_orders_lambda_read.py s3://deployment-ad-system/AdSystemPipeLine/BuildArtif/
      - aws s3 cp test_crud_orders_lambda_update.py s3://deployment-ad-system/AdSystemPipeLine/BuildArtif/
      - aws s3 cp test_crud_wallet_lambda_add_funds.py s3://deployment-ad-system/AdSystemPipeLine/BuildArtif/
      - aws s3 cp test_crud_wallet_lambda_get_wallet.py s3://deployment-ad-system/AdSystemPipeLine/BuildArtif/
      - aws s3 cp test_crud_wallet_lambda_deduct_funds.py s3://deployment-ad-system/AdSystemPipeLine/BuildArtif/
      - ls -l
      - aws s3 cp stack.zip s3://deployment-ad-system/AdSystemPipeLine/BuildArtif/
      - cd Functions
      - aws s3 cp CRUDOrders.zip s3://deployment-ad-system/AdSystemPipeLine/BuildArtif/
      - aws s3 cp CRUDWallet.zip s3://deployment-ad-system/AdSystemPipeLine/BuildArtif/
      - aws s3 cp CallBackLambda.zip s3://deployment-ad-system/AdSystemPipeLine/BuildArtif/
      - cd ..
      - ls -l

artifacts:
  files:
    - stack.zip
    - test_crud_orders_lambda_read.py
    - test_crud_orders_lambda_update.py
    - test_crud_wallet_lambda_add_funds.py
    - test_crud_wallet_lambda_get_wallet.py
    - test_crud_wallet_lambda_deduct_funds.py
    - buildspec-deploy.yml
    - Functions/CRUDOrders.zip
    - Functions/CRUDWallet.zip
    - Functions/CallBackLambda.zip

environment:
  variables:
    BUCKET_NAME: "deployment-ad-system"
